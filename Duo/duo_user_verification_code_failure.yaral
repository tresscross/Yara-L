rule duo_user_verification_code_failure {
  meta:
    author = "Jason Walker @tresscross"
    description = "Detects when Duo user fails verification."
    tactic = "Credential Access"
    technique = "Multi-Factor Authentication Interception"
    data_source = "Duo"
    severity = "Low"
    priority = "Low"

  events:
    $login.metadata.log_type = "DUO_AUTH"
    $login.principal.ip != "0.0.0.0"
(
    $login.security_result.summary = "verification_code_missing" OR
    $login.security_result.summary = "verification_code_incorrect" OR
    $login.security_result.summary = "invalid_passcode"
)
        
    $login.target.user.userid = $userid

  match:
    $userid over 30m

  outcome:
    $target_user_agent = array_distinct($login.network.http.user_agent)
    $principal_ip = array_distinct($login.principal.ip)
    $principal_ip_country = array_distinct($login.principal.ip_geo_artifact.location.country_or_region)
    $principal_ip_state = array_distinct($login.principal.ip_geo_artifact.location.state)
    $principal_ip_city = array_distinct($login.principal.location.city)
    $principal_user_email_addresses = array_distinct ($login.principal.user.email_addresses)
    $security_result_summary = array_distinct($login.security_result.summary)
    $target_user_email_addresses = array_distinct($login.target.user.email_addresses)
    $target_user_userid = array_distinct($login.target.user.userid)
    $principal_ip_carrier = array_distinct($login.principal.ip_geo_artifact.network.organization_name)
    $security_result = array_distinct($login.security_result.summary)

  condition:
    $login
}
